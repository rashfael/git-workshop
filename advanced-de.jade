---
title: "rixx' Git-Workshop für Fortgeschrittene"
_content: false
---

extends layouts/presentation

// Idee:
// alles in Tutorial-/Gaming-Style: isn Tutorial, hat Erklärungen, single-player, mehr Level (branches), multi-player (mit u. ohne FF)
// das geht dann auch nahtlos in den geplanten git war über

block content
	section
		h1 Git Intro
		h4 für Fortgeschrittene


	section
		section
			h4 Mach es weg!
			h2 Reset

		section
			h4 Das hätte in einen Feature-Branch gehört
			pre: code.bash(data-trim)
				| git branch feature/blakeks
				| git reset --hard HEAD~3
				| git checkout feature/blakeks

		section
			h4 Das hätte in einen Commit gehört
			pre: code.bash(data-trim)
				| git reset --soft HEAD~5
				| git commit --all -m 'So ein eleganter Commit aber auch!'

		section
			h4 Cheat Sheet
			pre: code.bash(data-trim)
				| git reset &lt;file&gt;					# undo git add &lt;file&gt;

			pre: code.bash(data-trim)
				| git reset --hard &lt;commit&gt;				# Setzt alles auf Commit-Stand
				| git reset --hard HEAD 				# Schnell zurück zum letzten Commit!
				| git checkout -- &lt;file&gt;				# Nur eine Datei zurücksetzen
			pre: code.bash(data-trim)
				| git reset --soft &lt;commit&gt;				# Ändert nur das Repo
				|										# lässt das Working Dir in Ruhe

	section
		section
			h4 Once more, without feeling!
			h2 Cherry-Pick und Revert

			pre: code.bash(data-trim)
				| git cherry-pick [-e] &lt;commit&gt;				# Den Commit bitte noch mal!

			pre: code.bash(data-trim)
				| git revert &lt;commit&gt;				# Den Commit bitte rückgängig!

	section
		section

			h4 Das hätte ich gern auch in meinem Branch, bitte
			h2 git rebase
			
			//- img.no-border(src='/img/rebase.svg', height='400px')

			pre: code.bash(data-trim)
				| git rebase &lt;branch&gt;
				| git pull --rebase

		section
			h4 Ich war jung und brauchte das Geld: Geschichtsfälschung
			h2 interactive rebase: squashen und mehr

			pre: code.bash(data-trim)
				| git rebase --interactive &lt;commit_nachdems_losgeht&gt;

	section
		section
			h4 MEHR MAGIE
			h2 git filter-branch

		section
			h4 Whooops, da waren Passwörter in der Datei

			pre: code.bash(data-trim)
				| git filter-branch --index-filter 'git rm --cached --ignore-unmatched conf/my.conf' \
				|     --prune-empty --tag-name-filter cat -- --all
		
		section
			h4 Sonstige Filter
			pre: code.bash(data-trim)
				| --index-filter     # für git-Befehle, schnell
				| --tree-filter      # OS-Befehle, langsamer
				| --msg-filter       # Commit-Messages
				| --commit-filter    # Commits

			See also: BFG Repo Cleaner

	section
		section
			h4 Wo ist der Fehler, such, such!
			h2 git bisect

			pre: code.bash(data-trim)
				| git bisect start
				| git bisect good &lt;commit&gt;
				| git bisect bad &lt;commit&gt;
				| git bisect skip
				| git bisect run

	section
		section
			h4 Pssssst, Bonus-Features

		section
			h4 git-checkout

			pre: code.bash(data-trim)
				| git checkout HEAD^^^
				| git checkout develop~3
				| git checkout master@{today}
				| git checkout release@{one.month.ago}
				| git checkout feature/bla@{5 minutes ago}
				| git checkout :/Version.*
				| git checkout HEAD{/Bugfix.*}
